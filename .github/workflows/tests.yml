name: Tests
on:
  push:
  pull_request:
  schedule:
    - cron: '0 5 * * *'

jobs:
  test:
    name: ${{ matrix.redmine }} ${{ matrix.db }} ruby-${{ matrix.ruby }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby: ['2.6', '2.4']
        redmine: ['4.1-stable', 'master']
        db: ['postgres', 'mysql']
      fail-fast: false

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: root
          MYSQL_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Verify MySQL connection from host
        run: |
          mysql --host 127.0.0.1 --port 3306 -uroot -e "SHOW DATABASES"
        if: matrix.db == 'mysql'

      - name: Checkout Redmine
        uses: actions/checkout@v2
        with:
          repository: redmine/redmine
          ref: ${{ matrix.redmine }}
          path: redmine

      - name: Checkout redmine_git_hosting
        uses: actions/checkout@v2
        with:
          repository: jbox-web/redmine_git_hosting
          path: redmine/plugins/redmine_git_hosting

      - name: Checkout additionals
        uses: actions/checkout@v2
        with:
          repository: AlphaNodes/additionals
          path: redmine/plugins/additionals

      - name: Checkout additional_tags
        uses: actions/checkout@v2
        with:
          repository: AlphaNodes/additional_tags
          path: redmine/plugins/additional_tags

      - name: Checkout redmine_code_review
        uses: actions/checkout@v2
        with:
          repository: haru/redmine_code_review
          path: redmine/plugins/redmine_code_review

      - name: Checkout redmine_messenger
        uses: actions/checkout@v2
        with:
          repository: AlphaNodes/redmine_messenger
          path: redmine/plugins/redmine_messenger

      - name: Checkout redmine_saml
        uses: actions/checkout@v2
        with:
          repository: AlphaNodes/redmine_saml
          path: redmine/plugins/redmine_saml

      - name: Checkout redmine_privacy_terms
        uses: actions/checkout@v2
        with:
          repository: AlphaNodes/redmine_privacy_terms
          path: redmine/plugins/redmine_privacy_terms

      - name: Checkout redmine_issue_evm
        uses: actions/checkout@v2
        with:
          repository: momibun926/redmine_issue_evm
          path: redmine/plugins/redmine_issue_evm

      - name: Checkout redmine_ref_issues
        uses: actions/checkout@v2
        with:
          repository: AlphaNodes/redmine_ref_issues
          path: redmine/plugins/redmine_ref_issues

      - name: Checkout redmine-view-customize
        uses: actions/checkout@v2
        with:
          repository: onozaty/redmine-view-customize
          path: redmine/plugins/view_customize

      - name: Checkout redmine_theme_changer
        uses: actions/checkout@v2
        with:
          repository: haru/redmine_theme_changer
          path: redmine/plugins/redmine_theme_changer

      - name: Checkout sidebar_hide from gitlab
        working-directory: redmine
        run: |
          git clone https://gitlab.com/bdemirkir/sidebar_hide.git plugins/sidebar_hide

      - name: Checkout redmine_lightbox2
        uses: actions/checkout@v2
        with:
          repository: paginagmbh/redmine_lightbox2
          path: redmine/plugins/redmine_lightbox2

      - name: Checkout redmine_issue_open_date
        uses: actions/checkout@v2
        with:
          repository: southbridgeio/redmine_issue_open_date
          path: redmine/plugins/redmine_issue_open_date

      - name: Checkout redmine_issue_view_columns
        uses: actions/checkout@v2
        with:
          repository: kenan3008/redmine_issue_view_columns
          path: redmine/plugins/redmine_issue_view_columns

      - name: Checkout redmine_wysiwyg_editor
        uses: actions/checkout@v2
        with:
          repository: taqueci/redmine_wysiwyg_editor
          path: redmine/plugins/redmine_wysiwyg_editor

      - name: Checkout redmine_dmsf
        uses: actions/checkout@v2
        with:
          repository: danmunn/redmine_dmsf
          path: redmine/plugins/redmine_dmsf

      - name: Checkout redmine_xls_export
        uses: actions/checkout@v2
        with:
          repository: two-pack/redmine_xls_export
          path: redmine/plugins/redmine_xls_export

      - name: Checkout redmine_sidekiq
        uses: actions/checkout@v2
        with:
          repository: ogom/redmine_sidekiq
          path: redmine/plugins/redmine_sidekiq

      - name: Checkout gitolite
        uses: actions/checkout@v2
        with:
          repository: sitaramc/gitolite
          path: gitolite

      - name: Update package archives
        run: sudo apt-get update --yes --quiet

      - name: Install package dependencies
        run: >
          sudo apt-get install --yes --quiet
          build-essential
          cmake
          libgpg-error-dev
          libicu-dev
          libpq-dev
          libmysqlclient-dev
          libssh2-1
          libssh2-1-dev
          subversion

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Setup Cache
        uses: actions/cache@v1
        with:
          path: vendor
          key: v1-ruby-${{ matrix.ruby }}-redmine-${{ matrix.redmine }}

      - name: Setup Bundler
        run: |
          gem install bundler -v '~> 1.0'
          bundle config path "$(pwd)/vendor/bundle"

      - name: Set Gemfile.local with gems for testing
        working-directory: redmine
        run: |
          echo "source 'https://rubygems.org'" > Gemfile.local
          echo "group :test do" >> Gemfile.local
          echo "  gem 'simplecov-rcov'" >> Gemfile.local
          echo "  gem 'factory_bot_rails', '< 5.0'" >> Gemfile.local
          echo "  gem 'shoulda'" >> Gemfile.local
          echo "  gem 'rails-controller-testing'" >> Gemfile.local
          echo "  gem 'coveralls', require: false" >> Gemfile.local
          echo "end">> Gemfile.local

      - name: Prepare Redmine source
        working-directory: redmine
        run: |
          sed -i '/rubocop/d' Gemfile
          rm -f .rubocop*
          cp plugins/redmine_git_hosting/contrib/github/database-${{ matrix.db }}.yml config/database.yml
          cp plugins/additionals/test/support/configuration.yml config/configuration.yml
          cp plugins/redmine_saml/test/support/saml.rb config/initializers/

      - name: Install admin ssh key
        working-directory: redmine
        run: |
          ssh-keygen -N '' -f plugins/redmine_git_hosting/ssh_keys/redmine_gitolite_admin_id_rsa

      - name: Install Gitolite
        working-directory: redmine
        run: |
          sudo useradd --create-home git
          sudo -n -u git -i mkdir bin
          sudo -n -u git -i $GITHUB_WORKSPACE/gitolite/install -to /home/git/bin
          sudo cp plugins/redmine_git_hosting/ssh_keys/redmine_gitolite_admin_id_rsa.pub /home/git/
          sudo chown git.git /home/git/redmine_gitolite_admin_id_rsa.pub
          sudo -n -u git -i bin/gitolite setup -pk redmine_gitolite_admin_id_rsa.pub

      - name: Install Ruby dependencies
        working-directory: redmine
        run: |
          bundle install --jobs=4 --retry=3 --without development

      - name: Run Redmine rake tasks
        env:
          RAILS_ENV: test
        working-directory: redmine
        run: |
          bundle exec rake generate_secret_token
          bundle exec rake db:create db:migrate redmine:plugins:migrate
          bundle exec rake db:test:prepare

      - name: Install rspec file
        working-directory: redmine
        run: |
          mkdir spec
          cp plugins/redmine_git_hosting/spec/root_spec_helper.rb spec/spec_helper.rb

      - name: Run test for additionals
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=additionals RUBYOPT="-W0"
        if: always()

      - name: Run test for additional_tags
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=additional_tags RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_code_review
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_code_review RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_git_hosting
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine_git_hosting:ci:all
        if: always()

      - name: Fix tests for redmine_issue_evm
        working-directory: redmine
        run: |
          sed -i 's/\.\.\/test_helper/\/test_helper/g' plugins/redmine_issue_evm/test/functional/evmbaselines_controller_test.rb
          sed -i 's/\.\.\/test_helper/\/test_helper/g' plugins/redmine_issue_evm/test/functional/evms_controller_test.rb
          sed -i 's/\.\.\/test_helper/\/test_helper/g' plugins/redmine_issue_evm/test/unit/evmbaseline_issue_test.rb
          sed -i 's/\.\.\/test_helper/\/test_helper/g' plugins/redmine_issue_evm/test/unit/evmbaseline_test.rb
          sed -i '/\.\.\/test/\/test/d' plugins/redmine_issue_evm/test/test_helper.rb

      - name: Run test for redmine_issue_evm
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_issue_evm RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_ref_issues
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_ref_issues RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_messenger
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_messenger RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_privacy_terms
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_privacy_terms RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_redmine_saml
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_saml RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_theme_changer
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_theme_changer RUBYOPT="-W0"
        if: always()

      - name: Run test for view_customize
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=view_customize RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_dmsf
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_dmsf RUBYOPT="-W0"
        if: always()

      - name: Run test for redmine_xls_export
        env:
          RAILS_ENV: test
          REDMINE_VERSION: ${{ matrix.redmine }}
        working-directory: redmine
        run: bundle exec rake redmine:plugins:test NAME=redmine_xls_export RUBYOPT="-W0"
        if: always()
